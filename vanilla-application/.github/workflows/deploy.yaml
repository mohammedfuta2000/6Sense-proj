name: Build and Store Image
on: 
  workflow_dispatch:
  push:
    branches:
      - test
jobs:
  build-and-store:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          audience: sts.amazonaws.com
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Retrieve env variables
        run: |
          aws ssm get-parameters-by-path --path "/6senseev/beta/" --recursive --with-decryption --region ${{ secrets.AWS_REGION }} --output json | jq -r '.Parameters | map("\(.Name | split("/") | last) = \(.Value)") | .[]' > .env
      - name: Check if registry exists
        id: check-ecr
        run: |
          input=${{ GITHUB.repository }}
          reponame=$(echo "$input" | awk -F'/' '{print $2}')
          aws ecr describe-repositories --repository-names $reponame || echo "::set-output name=exists::false"
      - name: Create ECR Registry if it doesnt exist
        if: steps.check-ecr.outputs.exists == 'false'
        run: |
          input=${{ GITHUB.repository }}
          reponame=$(echo "$input" | awk -F'/' '{print $2}')
          echo "reponame: $reponame"
          aws ecr create-repository --repository-name $reponame 
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
            input=${{ GITHUB.repository }}
            reponame=$(echo "$input" | awk -F'/' '{print $2}')
            docker build -t $REGISTRY/$reponame:$IMAGE_TAG .
            docker push $REGISTRY/$reponame:$IMAGE_TAG
  argocd-stage:
    needs: build-and-store
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout argocd repo
        uses: actions/checkout@v3
        with:
          repository: 6senseEV/k8s-deployments
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ref: 'main'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 
        with:
          audience: sts.amazonaws.com
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: update argocd deployment
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
            ls -a
            input=${{ GITHUB.repository }}
            reponame=$(echo "$input" | awk -F'/' '{print $2}')
            
            imageurl="$REGISTRY/$reponame:$IMAGE_TAG"
            echo $imageurl
            
            sed -i "s|image: .*|image: $imageurl|" ./beta/$reponame/deployment.yaml
            cat ./beta/$reponame/deployment.yaml
            git config --global user.email "mohammedfuta2000@gmail.com"
            git config --global user.name "mohammed"
            git add .
            git commit -m 'Done  by Github Actions   Job changemanifest: ${{ github.run_number }}'
            git push origin main
    