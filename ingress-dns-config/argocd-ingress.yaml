apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-argocd
  namespace: argocd
  annotations:
    # cert-manager.io/issuer: letsencrypt-nginx
    # https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
spec:
  # tls:
  #   - hosts:
  #     - argocd.6senseev.com
  #     secretName: letsencrypt-nginx-quote
  rules:  
    - host: argocd.6senseev.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  name: https
  ingressClassName: nginx


# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: argocd-ingress
#   namespace: argocd
#   annotations:
#     cert-manager.io/issuer: letsencrypt-nginx
#     nginx.ingress.kubernetes.io/ssl-passthrough: "true"
#     # If you encounter a redirect loop or are getting a 307 response code
#     # then you need to force the nginx ingress to connect to the backend using HTTPS.
#     #
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
# spec:
#   rules:
#   - host: argocd.mohammedfuta2000.com
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: argocd-server
#             port:
#               name: https
#   tls:
#   - hosts:
#     - argocd.mohammedfuta2000.com
#     secretName: letsencrypt-nginx-quote